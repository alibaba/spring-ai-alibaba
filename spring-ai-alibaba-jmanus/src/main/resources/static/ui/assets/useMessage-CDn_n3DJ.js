var y=Object.defineProperty;var A=(s,e,t)=>e in s?y(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var d=(s,e,t)=>A(s,typeof e!="symbol"?e+"":e,t);import{d as _,r,l as $,b as g,g as p,p as T,a as v,f as E,e as R,i as S,t as b,n as B,T as j,E as k,R as C,A as L}from"./index-DPEG66sS.js";import{I as U,_ as x}from"./_plugin-vue_export-helper-CVv1atPb.js";class N{static async handleResponse(e){if(!e.ok)try{const t=await e.json();throw new Error(t.message||`API request failed: ${e.status}`)}catch{throw new Error(`API request failed: ${e.status} ${e.statusText}`)}return e}static async getAllAgents(e){try{if(e){const t=await fetch(`${this.BASE_URL}/namespace/${e}`);return await(await this.handleResponse(t)).json()}else{const t=await fetch(`${this.BASE_URL}`);return await(await this.handleResponse(t)).json()}}catch(t){throw console.error("Failed to get Agent list:",t),t}}static async getAgentById(e){try{const t=await fetch(`${this.BASE_URL}/${e}`);return await(await this.handleResponse(t)).json()}catch(t){throw console.error(`Failed to get Agent[${e}] details:`,t),t}}static async createAgent(e){try{const t=await fetch(this.BASE_URL,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return await(await this.handleResponse(t)).json()}catch(t){throw console.error("Failed to create Agent:",t),t}}static async updateAgent(e,t){try{const a=await fetch(`${this.BASE_URL}/${e}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await(await this.handleResponse(a)).json()}catch(a){throw console.error(`Failed to update Agent[${e}]:`,a),a}}static async deleteAgent(e){try{const t=await fetch(`${this.BASE_URL}/${e}`,{method:"DELETE"});if(t.status===400)throw new Error("Cannot delete default Agent");await this.handleResponse(t)}catch(t){throw console.error(`Failed to delete Agent[${e}]:`,t),t}}static async getAvailableTools(){try{const e=await fetch(`${this.BASE_URL}/tools`);return await(await this.handleResponse(e)).json()}catch(e){throw console.error("Failed to get available tools list:",e),e}}}d(N,"BASE_URL","/api/agents");const c=async s=>{if(!s.ok){const e=await s.json().catch(()=>({message:"Network error"}));throw new Error(e.message||`HTTP error! status: ${s.status}`)}return s.json()},I=async()=>{const s=await fetch("/api/agent-management");return c(s)},J=async()=>{const s=await fetch("/api/agent-management/languages");return c(s)},V=async s=>{const e=await fetch("/api/agent-management/reset",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)});return c(e)},q=async()=>{const s=await fetch("/api/agent-management/stats");return c(s)},F=_({__name:"Toast",setup(s,{expose:e}){const t=r(!1),a=r(""),n=r("success"),l=r("carbon:checkmark"),u=r(3e3),w=(h,i="success",f=3e3)=>{a.value=h,n.value=i,l.value=i==="success"?"carbon:checkmark":"carbon:error",u.value=f,t.value=!0,setTimeout(()=>{t.value=!1},u.value)},m=()=>{t.value=!1};return e({show:w}),(h,i)=>(g(),$(k,{to:"body"},[p(j,{name:"slide"},{default:T(()=>[t.value?(g(),v("div",{key:0,class:B(["toast",`toast--${n.value}`]),onClick:m},[p(S(U),{icon:l.value,class:"toast-icon"},null,8,["icon"]),R("span",null,b(a.value),1)],2)):E("",!0)]),_:1})]))}}),P=x(F,[["__scopeId","data-v-581895ae"]]);let o=null;const z=()=>{if(!o){const s=C(P),e=document.createElement("div");document.body.appendChild(e),o=s.mount(e)}return{success:(s,e)=>{o==null||o.show(s,"success",e)},error:(s,e)=>{o==null||o.show(s,"error",e)}}};function H(){const s=L({show:!1,text:"",type:"success"});return{message:s,showMessage:(t,a="success")=>{console.log(`Showing message: ${t}, Type: ${a}`),s.text=t,s.type=a,s.show=!0;const n=a==="error"?5e3:3e3;console.log(`Message will be automatically hidden after ${n}ms`),setTimeout(()=>{s.show=!1,console.log("Message hidden")},n)}}}export{N as A,H as a,J as b,q as c,I as g,V as r,z as u};
