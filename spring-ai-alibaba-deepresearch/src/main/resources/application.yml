server:
  port: 8080
spring:
  profiles:
    # LangFuse和可观测配置
    include: observability
  application:
    name: spring-ai-alibaba-deepresearch
  # Redis 配置
  data:
    redis:
      enabled: false
      host: localhost
      port: 6379
      password: ${REDIS-PASSWORD}
      timeout: 3000 # 连接超时时间（毫秒）
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  ai:
    dashscope:
      api-key: ${AI_DASHSCOPE_API_KEY}
      base-url: https://dashscope.aliyuncs.com
      embedding:
        options:
          model: text-embedding-v1

    mcp:
      client:
        enabled: false
        type: ASYNC
    alibaba:
      toolcalling:
        baidu:
          search:
            enabled: true
        tavilysearch:
          api-key: ${TAVILY_API_KEY}
          enabled: true
        jinacrawler:
          enabled: false
          api-key: ${JINA_API_KEY}
        serpapi:
          api-key: ${SERPAPI_KEY}
          enabled: true
        aliyunaisearch:
          api-key: ${ALIYUN_AI_SEARCH_API_KEY}
          base-url: ${ALIYUN_AI_SEARCH_BASE_URL}
          enabled: true
      deepresearch:
        # 图执行的最大迭代次数
        max-iterations: 50
        # 定义项目可以使用的搜索引擎
        search-list:
          - tavily
          - aliyun
          - baidu
          - serpapi
#         TODO: 搜索引擎配置
#          - google_scholar  # 学术
#          - xiaohongshu     # 生活
#          - wikipedia       # 百科
#          - national_statistics  # 数据分析
#          - google_trends   # 趋势分析
#          - baidu_index     # 中文趋势分析
        smart-agents:
          enabled: false
          # search-platform-mapping:
          #   academic_research:
          #     primary: google_scholar
          #   lifestyle_travel:
          #     primary: xiaohongshu
          #   encyclopedia:
          #     primary: wikipedia
          #   data_analysis:
          #     primary: national_statistics
          #   general_research:
          #     primary: tavily
        mcp:
          enabled: false
          config-location: classpath:mcp-config.json
        parallel-node-count:
          researcher: 4
          coder: 4
        rag:
          enabled: false
          # 可以设置为 'simple' 或 'elasticsearch'
          vector-store-type: simple
          data:
            # 启动时加载 classpath下data目录中的所有文件
            locations:
              - "classpath:/data/"
          # 专业知识库配置
          professional-knowledge-bases:
            decision-enabled: true
            knowledge-bases:
              # DashScope专业知识库示例
              - id: "medical_kb"
                name: "医学专业知识库"
                description: "包含医学、药学、生物医学工程等领域的专业知识，适合回答医疗健康、疾病诊断、药物治疗、医学研究等相关问题"
                type: "api"
                enabled: true
                priority: 10
                api:
                  provider: "dashscope"
                  url: "https://dashscope.aliyuncs.com/api/v1/services/knowledge-base/text-search"
                  api-key: "${DASHSCOPE_API_KEY}"
                  model: "text-embedding-v2"
                  timeout-ms: 30000
                  max-results: 5
              # 法律知识库示例
              - id: "legal_kb"
                name: "法律专业知识库"
                description: "涵盖法律法规、司法解释、案例分析等内容，适合回答法律咨询、合规问题、法律条文解读等相关问题"
                type: "api"
                enabled: true
                priority: 20
                api:
                  provider: "custom"
                  url: "https://api.legal-kb.example.com/search"
                  api-key: "${LEGAL_KB_API_KEY}"
                  timeout-ms: 25000
                  max-results: 3
              # 技术知识库示例
              - id: "tech_kb"
                name: "技术文档知识库"
                description: "包含软件开发、系统架构、技术标准、编程语言等技术文档，适合回答编程问题、架构设计、技术选型等相关问题"
                type: "elasticsearch"
                enabled: true
                priority: 30
              # 金融知识库示例
              - id: "finance_kb"
                name: "金融专业知识库"
                description: "涵盖金融市场、投资理财、风险管理、金融产品等专业知识，适合回答投资咨询、金融分析、市场趋势等相关问题"
                type: "api"
                enabled: false  # 暂时禁用
                priority: 40
                api:
                  provider: "dashscope"
                  api-key: "${FINANCE_KB_API_KEY}"
                  max-results: 4
        # 报告导出路径配置
        export:
          path: ${AI_DEEPRESEARCH_EXPORT_PATH}
        reflection:
          enabled: true
          max-attempts: 1

logging:
  level:
    com.alibaba.cloud.ai.example.deepresearch: debug

