openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: chat-client
  description: the chat-client API
- name: chat-model
  description: the chat-model API
paths:
  /studio/api/chat-models:
    get:
      tags:
      - chat-model
      summary: list chat models
      operationId: list
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatModel"
    post:
      tags:
      - chat-model
      summary: run model by input
      operationId: run
      parameters:
      - name: runActionParam
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/RunActionParam"
      responses:
        "404":
          description: model not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ChatModelRunResult"
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatModelRunResult"
  /studio/api/chat-models/{modelName}:
    get:
      tags:
      - chat-model
      summary: get chat model by model name
      operationId: get
      parameters:
      - name: modelName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatModel"
        "404":
          description: model not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatModel"
  /studio/api/chat-clients:
    get:
      tags:
      - chat-client
      summary: list chat clients
      operationId: list_1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatClient"
  /studio/api/chat-clients/{clientName}:
    get:
      tags:
      - chat-client
      summary: get chat client by name
      operationId: get_1
      parameters:
      - name: clientName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatClient"
        "404":
          description: chat client not found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ChatClient"
  /ai/stream:
    get:
      tags:
      - chat-controller
      operationId: stream
      parameters:
      - name: input
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /ai/streamByModel:
    get:
      tags:
      - chat-controller
      operationId: streamByModel
      parameters:
      - name: input
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /ai/chat:
    get:
      tags:
      - chat-controller
      operationId: chat
      parameters:
      - name: input
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /ai/chatByModel:
    get:
      tags:
      - chat-controller
      operationId: chatByModel
      parameters:
      - name: input
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    RunActionParam:
      type: object
      properties:
        key:
          type: string
          description: "action key, bean name"
        input:
          type: string
          description: user input
        stream:
          type: boolean
          description: use stream response
          default: false
    ActionResult:
      type: object
      properties:
        streamResponse:
          type: array
          items:
            type: string
        response:
          type: string
    ChatModelRunResult:
      type: object
      properties:
        input:
          $ref: "#/components/schemas/RunActionParam"
        result:
          $ref: "#/components/schemas/ActionResult"
        telemetry:
          $ref: "#/components/schemas/TelemetryResult"
    TelemetryResult:
      type: object
      properties:
        traceId:
          type: string
    ChatModel:
      type: object
      properties:
        name:
          type: string
          description: ChatModel bean name
        model:
          type: string
          description: dashscope model name
        modelType:
          type: string
          enum:
          - CHAT
          - IMAGE
          - AUDIO
        chatOptions:
          $ref: "#/components/schemas/DashScopeChatOptions"
        imageOptions:
          $ref: "#/components/schemas/DashScopeImageOptions"
    DashScopeChatOptions:
      type: object
      properties:
        maxTokens:
          type: integer
          format: int32
        presencePenalty:
          type: number
          format: double
        frequencyPenalty:
          type: number
          format: double
        stopSequences:
          type: array
          items:
            type: string
        proxyToolCalls:
          type: boolean
        model:
          type: string
        temperature:
          type: number
          format: double
        seed:
          type: integer
          format: int32
        top_p:
          type: number
          format: double
        top_k:
          type: integer
          format: int32
        stop:
          type: array
          items:
            type: object
        enable_search:
          type: boolean
        incremental_output:
          type: boolean
        repetition_penalty:
          type: number
          format: double
        tools:
          type: array
          items:
            $ref: "#/components/schemas/FunctionTool"
        tool_choice:
          type: object
        vl_high_resolution_images:
          type: boolean
        multi_model:
          type: boolean
    DashScopeImageOptions:
      type: object
      properties:
        responseFormat:
          type: string
        model:
          type: string
        "n":
          type: integer
          format: int32
        size_width:
          type: integer
          format: int32
        size_height:
          type: integer
          format: int32
        size:
          type: string
        style:
          type: string
        seed:
          type: integer
          format: int32
        ref_img:
          type: string
        ref_strength:
          type: number
          format: float
        ref_mode:
          type: string
        negative_prompt:
          type: string
    Function:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: object
    FunctionTool:
      type: object
      properties:
        type:
          type: string
          enum:
          - function
        function:
          $ref: "#/components/schemas/Function"
    ChatClient:
      type: object
