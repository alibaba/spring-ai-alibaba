package {{packageName}}.graph;

import com.alibaba.cloud.ai.graph.CompiledGraph;
import com.alibaba.cloud.ai.graph.KeyStrategy;
import com.alibaba.cloud.ai.graph.OverAllState;
import com.alibaba.cloud.ai.graph.StateGraph;
import com.alibaba.cloud.ai.graph.action.AsyncEdgeAction;
import com.alibaba.cloud.ai.graph.action.AsyncNodeAction;
import com.alibaba.cloud.ai.graph.action.NodeAction;
import com.alibaba.cloud.ai.graph.exception.GraphStateException;
import org.springframework.ai.chat.client.ChatClient;
import org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor;
import org.springframework.ai.chat.model.ChatModel;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;
import java.util.List;

import static com.alibaba.cloud.ai.graph.StateGraph.END;
import static com.alibaba.cloud.ai.graph.StateGraph.START;
{{importSection}}

@Component
public class GraphBuilder {

    {{assistMethodCode}}

    @Bean
    public CompiledGraph buildGraph(
        ChatModel chatModel
        {{#hasCode}}, CodeExecutionConfig codeExecutionConfig, CodeExecutor codeExecutor{{/hasCode}}
        ) throws Exception {
        ChatClient chatClient = ChatClient.builder(chatModel).defaultAdvisors(new SimpleLoggerAdvisor()).build();

        // new stateGraph
        StateGraph stateGraph = new StateGraph({{stateSection}});
        // add nodes
        {{nodeSection}}
        // add edges
        {{edgeSection}}
        return stateGraph.compile();
    }

    {{#hasCode}}
        @Bean
    	public Path tempDir() throws IOException {
    	    // todoï¼š set your work dir
    		Path tempDir = Files.createTempDirectory("code-execution-workdir-");
    		tempDir.toFile().deleteOnExit();
    		return tempDir;
    	}

    	@Bean
    	public CodeExecutionConfig codeExecutionConfig(Path tempDir) {
    		return new CodeExecutionConfig().setWorkDir(tempDir.toString());
    	}

    	@Bean
    	public CodeExecutor codeGenerator() {
    		return new LocalCommandlineCodeExecutor();
    	}
    {{/hasCode}}
}
