{
  "spark-flow.components.BaseNode.index.copySuccess": "复制成功",
  "spark-flow.components.BaseNode.index.copy": "复制",
  "spark-flow.components.BaseNode.index.delete": "删除",
  "spark-flow.components.BaseNode.index.debug": "调试",
  "spark-flow.components.BaseNode.index.whenError": "当异常时",
  "spark-flow.components.BaseNode.index.errorBranch": "异常分支",
  "spark-flow.components.CheckListBtn.index.checklistVar1": "检查清单 · {var1}",
  "spark-flow.components.CheckListBtn.index.allResolved": "所有清单项已解决",
  "spark-flow.components.CodeInput.index.arrayEmpty": "Array(空数组)",
  "spark-flow.components.CodeInput.index.arrayMixed": "Array<混合类型>",
  "spark-flow.components.CodeInput.index.fileObject": "File样式对象",
  "spark-flow.components.CodeInput.index.expectArrayGotVar1": "期望类型为数组，但得到了{var1}",
  "spark-flow.components.CodeInput.index.arrayItemNotObjectVar1Var2": "数组中第{var1}项不是对象类型，而是{var2}",
  "spark-flow.components.CodeInput.index.arrayItemNotStringVar1Var2": "数组中第{var1}项不是字符串类型，而是{var2}",
  "spark-flow.components.CodeInput.index.arrayItemNotNumberVar1Var2": "数组中第{var1}项不是数字类型，而是{var2}",
  "spark-flow.components.CodeInput.index.arrayItemNotBooleanVar1Var2": "数组中第{var1}项不是布尔类型，而是{var2}",
  "spark-flow.components.CodeInput.index.arrayItemNotFileVar1Var2": "数组中第{var1}项不是文件类型，而是{var2}",
  "spark-flow.components.CodeInput.index.expectObjectGotVar1": "期望类型为对象，但得到了{var1}",
  "spark-flow.components.CodeInput.index.expectStringGotVar1": "期望类型为字符串，但得到了{var1}",
  "spark-flow.components.CodeInput.index.expectNumberGotVar1": "期望类型为数字，但得到了{var1}",
  "spark-flow.components.CodeInput.index.expectBooleanGotVar1": "期望类型为布尔值，但得到了{var1}",
  "spark-flow.components.CodeInput.index.expectFileGotVar1": "期望类型为文件，但得到了{var1}",
  "spark-flow.components.CodeInput.index.jsonParseErrorVar1": "JSON解析错误:{var1}",
  "spark-flow.components.CustomInputsControl.index.selectVariable": "请选择变量",
  "spark-flow.components.CustomInputsControl.index.noInputNeeded": "不需要输入值",
  "spark-flow.components.CustomInputsControl.index.reference": "引用",
  "spark-flow.components.CustomInputsControl.index.input": "输入",
  "spark-flow.components.CustomInputsControl.index.variableName": "变量名",
  "spark-flow.components.CustomInputsControl.index.referenceType": "引用方式",
  "spark-flow.components.CustomInputsControl.index.value": "值",
  "spark-flow.components.CustomInputsControl.index.enterVariableName": "请输入变量名",
  "spark-flow.components.CustomInputsControl.index.addVariable": "添加变量",
  "spark-flow.components.CustomOutputsForm.index.selectVariableType": "请选择变量类型",
  "spark-flow.components.CustomOutputsForm.index.enterVariableName": "请输入变量名",
  "spark-flow.components.CustomOutputsForm.index.enterVariableDescription": "请输入变量描述",
  "spark-flow.components.CustomOutputsForm.index.addVariable": "添加变量",
  "spark-flow.components.CustomOutputsForm.index.addSubVariable": "添加子变量",
  "spark-flow.components.CustomOutputsForm.index.variableName": "变量名",
  "spark-flow.components.CustomOutputsForm.index.type": "类型",
  "spark-flow.components.CustomOutputsForm.index.description": "描述",
  "spark-flow.components.FlowAside.index.nodeManagement": "节点管理",
  "spark-flow.components.FlowAside.index.nodeLibrary": "节点库",
  "spark-flow.components.FlowAside.index.current": "当前",
  "spark-flow.components.FlowPanel.ConfigPanel.copySuccess": "复制成功",
  "spark-flow.components.FlowPanel.ConfigPanel.enterNodeName": "请输入节点名称",
  "spark-flow.components.FlowPanel.ConfigPanel.nodeNameExists": "节点名称已存在",
  "spark-flow.components.FlowPanel.ConfigPanel.enterDescription": "请输入描述...",
  "spark-flow.components.FlowPanel.ConfigPanel.nodeNameConfig": "【节点名称】配置",
  "spark-flow.components.FlowPanel.ConfigPanel.debug": "调试",
  "spark-flow.components.FlowPanel.ConfigPanel.rename": "重命名",
  "spark-flow.components.FlowPanel.ConfigPanel.copy": "复制",
  "spark-flow.components.FlowPanel.ConfigPanel.delete": "删除",
  "spark-flow.components.FlowPanel.ConfigPanel.pleaseConfigureFirst": "请先配置",
  "spark-flow.components.FlowTools.AddNodeBtn.addNode": "添加节点",
  "spark-flow.components.FlowTools.HistoryBtn.undo": "撤销",
  "spark-flow.components.FlowTools.HistoryBtn.redo": "重做",
  "spark-flow.components.FlowTools.LayoutBtn.optimizeLayout": "布局优化",
  "spark-flow.components.FlowTools.MiniMapBtn.miniMap": "缩略图",
  "spark-flow.components.FlowTools.ScaleBtn.autoView": "自适应试图",
  "spark-flow.components.FlowTools.ScaleBtn.scale": "缩放",
  "spark-flow.components.FlowTools.ShortKeyBtn.shortcutKeys": "快捷键",
  "spark-flow.components.FlowTools.ShortKeyContent.command": "⌘",
  "spark-flow.components.FlowTools.ShortKeyContent.shift": "⇧",
  "spark-flow.components.FlowTools.ShortKeyContent.moveCanvas": "移动画布",
  "spark-flow.components.FlowTools.ShortKeyContent.spacebar": "空格键",
  "spark-flow.components.FlowTools.ShortKeyContent.drag": "拖拽",
  "spark-flow.components.FlowTools.ShortKeyContent.zoomIn": "放大",
  "spark-flow.components.FlowTools.ShortKeyContent.scroll": "滚动",
  "spark-flow.components.FlowTools.ShortKeyContent.or": "或",
  "spark-flow.components.FlowTools.ShortKeyContent.zoomOut": "缩小",
  "spark-flow.components.FlowTools.ShortKeyContent.undo": "撤销",
  "spark-flow.components.FlowTools.ShortKeyContent.redo": "恢复",
  "spark-flow.components.FlowTools.ShortKeyContent.delete": "删除",
  "spark-flow.components.FlowTools.ShortKeyContent.backspace": "退格",
  "spark-flow.components.FlowTools.TouchModeBtn.mouseFriendlyMode": "鼠标友好模式",
  "spark-flow.components.FlowTools.TouchModeBtn.mouseLeftDragCanvasZoom": "鼠标左键拖动画布，滚轮缩放",
  "spark-flow.components.FlowTools.TouchModeBtn.touchpadFriendlyMode": "触控板友好模式",
  "spark-flow.components.FlowTools.TouchModeBtn.twoFingersMoveDragTwoFingersOpenZoom": "双指同向移动进行拖动，双指开合进行缩放",
  "spark-flow.components.NodeMenu.index.ungrouped": "未分组",
  "spark-flow.components.NodeMenu.index.searchNodeName": "搜索节点名称",
  "spark-flow.components.NodeResultPanel.index.success": "成功",
  "spark-flow.components.NodeResultPanel.index.executing": "执行中",
  "spark-flow.components.NodeResultPanel.index.skipped": "跳过",
  "spark-flow.components.NodeResultPanel.index.failed": "失败",
  "spark-flow.components.NodeResultPanel.index.stopped": "已停止",
  "spark-flow.components.NodeResultPanel.index.paused": "暂停",
  "spark-flow.components.NodeResultPanel.index.input": "输入",
  "spark-flow.components.NodeResultPanel.index.output": "输出",
  "spark-flow.components.NodeTree.index.searchNodeName": "搜索节点名称",
  "spark-flow.components.ShortMemoryForm.index.nodeCache": "本节点缓存",
  "spark-flow.components.ShortMemoryForm.index.customCache": "自定义缓存",
  "spark-flow.components.ShortMemoryForm.index.memory": "记忆",
  "spark-flow.components.TaskStatus.index.runSuccess": "运行成功",
  "spark-flow.components.TaskStatus.index.running": "运行中",
  "spark-flow.components.TaskStatus.index.skipped": "跳过",
  "spark-flow.components.TaskStatus.index.runFailed": "运行失败",
  "spark-flow.components.TaskStatus.index.stopped": "已停止",
  "spark-flow.components.TaskStatus.index.paused": "已暂停",
  "spark-flow.components.TaskStatus.index.requestIdCopied": "Request ID 已复制",
  "spark-flow.components.TaskStatus.index.nodeId": "节点ID",
  "spark-flow.components.TaskStatus.index.nodeType": "节点类型",
  "spark-flow.components.TaskStatus.index.inputTokens": "输入Tokens",
  "spark-flow.components.TaskStatus.index.outputTokens": "输出Tokens",
  "spark-flow.components.TaskStatus.index.tokenDetails": "Token 详情",
  "spark-flow.components.TaskStatus.index.hideTestResult": "隐藏测试结果",
  "spark-flow.components.TaskStatus.index.showTestResult": "显示测试结果",
  "spark-flow.components.VarInputTextArea.index.maxInputChars": "最多可输入{var1}字",
  "spark-flow.components.VarInputTextArea.index.invalidVariable": "无效变量",
  "spark-flow.components.VarInputTextArea.index.builtinVariable": "内置变量",
  "spark-flow.components.VarInputTextArea.index.conversationVariable": "会话变量",
  "spark-flow.components.VarInputTextArea.index.insertVariableWithSlash": "输入\"/\"插入变量",
  "spark-flow.components.VariableInput.index.inputVariableValue": "输入变量值",
  "spark-flow.components.VariableInput.index.select": "请选择",
  "spark-flow.components.VariableInput.index.yes": "是",
  "spark-flow.components.VariableInput.index.no": "否",
  "spark-flow.demos.spark-flow-1.components.ErrorCatchForm.index.defaultValue": "默认值",
  "spark-flow.demos.spark-flow-1.components.ErrorCatchForm.index.defaultOutputWhenExceptionOccurs": "当发生异常时，指定默认输出内容",
  "spark-flow.demos.spark-flow-1.components.ErrorCatchForm.index.exceptionBranch": "异常分支",
  "spark-flow.demos.spark-flow-1.components.ErrorCatchForm.index.executeExceptionBranchWhenExceptionOccurs": "当发生异常时，则执行异常分支",
  "spark-flow.demos.spark-flow-1.components.ErrorCatchForm.index.exceptionHandling": "异常处理",
  "spark-flow.demos.spark-flow-1.components.ErrorCatchForm.index.handlingMethod": "处理方式",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.editParameter": "编辑参数",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.addParameter": "新增参数",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.name": "名称",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.enterParameterName": "请输入参数名称",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.mustContainLettersNumbersUnderscoresAndDollarAndCannotStartWithNumber": "只能包含字母、数字、下划线和$，且不能以数字开头",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.parameterNameAlreadyExists": "参数名称已存在",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.enter": "请输入",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.type": "类型",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.selectParameterType": "请选择参数类型",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.selectType": "选择类型",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.description": "描述",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.enterParameterDescription": "请输入参数描述",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.parameterDescription": "参数描述",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.required": "必填",
  "spark-flow.demos.spark-flow-1.components.ExtractParamEditModal.index.requiredIsForModelInferenceReferenceOnlyNotForMandatoryValidationOfParameterOutput": "必填仅作为模型推理的参考，不用于参数输出的强制验证。",
  "spark-flow.demos.spark-flow-1.components.ExtractParamItem.index.required": "必填",
  "spark-flow.demos.spark-flow-1.components.ExtractParamItem.index.notRequired": "非必填",
  "spark-flow.demos.spark-flow-1.components.GroupVariableForm.index.reference": "引用",
  "spark-flow.demos.spark-flow-1.components.GroupVariableForm.index.input": "输入",
  "spark-flow.demos.spark-flow-1.components.GroupVariableForm.index.referenceMethod": "引用方式",
  "spark-flow.demos.spark-flow-1.components.GroupVariableForm.index.variable": "变量",
  "spark-flow.demos.spark-flow-1.components.ModelConfigForm.index.selectModelFirst": "请先选择模型",
  "spark-flow.demos.spark-flow-1.components.ModelConfigForm.index.selectModel": "请选择模型",
  "spark-flow.demos.spark-flow-1.components.ModelConfigForm.index.visual": "视觉",
  "spark-flow.demos.spark-flow-1.components.ModelConfigForm.index.variable": "变量",
  "spark-flow.demos.spark-flow-1.components.RetryForm.index.retryOnFailure": "失败时重试",
  "spark-flow.demos.spark-flow-1.components.RetryForm.index.maxRetryTimes": "最大重试次数",
  "spark-flow.demos.spark-flow-1.components.RetryForm.index.retryInterval": "重试间隔",
  "spark-flow.demos.spark-flow-1.components.ShortMemoryForm.index.nodeCache": "本节点缓存",
  "spark-flow.demos.spark-flow-1.components.ShortMemoryForm.index.customCache": "自定义缓存",
  "spark-flow.demos.spark-flow-1.components.ShortMemoryForm.index.memory": "记忆",
  "spark-flow.demos.spark-flow-1.components.SingleNodeDrawer.index.testRun": "测试运行",
  "spark-flow.demos.spark-flow-1.components.SingleNodeDrawer.index.inputVariables": "输入变量",
  "spark-flow.demos.spark-flow-1.components.SingleNodeDrawer.index.variableDescription": "变量描述",
  "spark-flow.demos.spark-flow-1.components.SingleNodeDrawer.index.run": "运行",
  "spark-flow.demos.spark-flow-1.components.SingleNodeDrawer.index.reset": "重置",
  "spark-flow.demos.spark-flow-1.components.TestPanel.index.testPanel": "测试面板",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.canvasConfiguration": "画布",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.publishChannels": "发布",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.end": "结束",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.hello": "你好",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.helloSysQueryUser": "{\"sys\":{\"query\":\"你好\"},\"user\":{}}",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.start": "开始",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.startInput": "{\"input\":{\"provider\":\"87a5a76e\",\"modelId\":\"qwen-max\",\"messages\":[{\"message_type\":\"SYSTEM\",\"metadata\":{\"messageType\":\"SYSTEM\"},\"text\":\"你是一个小助理\"},{\"message_type\":\"USER\",\"metadata\":{\"messageType\":\"USER\"},\"media\":[],\"text\":\"你好\"}],\"params\":{}}}",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.startOutput": "{\"output\":\"你好！有什么我能帮助你的吗？\"}",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.largeModel1": "大模型1",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.helloWhatCanIHelpYou": "你好！有什么我能帮助你的吗？",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.test": "测试",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.displayTestResults": "展示测试结果",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.publish": "发布",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.start": "开始",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.startNode": "开始节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.basic": "基础",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.end": "结束",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.endNode": "结束节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.largeModel": "大模型",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.largeModelNode": "大模型节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.interaction": "交互",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.processOutput": "流程输出",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.processOutputNode": "流程输出节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.script": "脚本",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.scriptNode": "脚本节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.logic": "逻辑",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.conditionJudgment": "条件判断",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.judgmentNode": "判断节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.defaultCondition": "默认条件",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.intentionClassification": "意图分类",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.intentionClassificationNode": "意图分类节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.outputResult": "输出结果",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.thinkingProcess": "思考过程",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.hitTheme": "命中主题",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.loop": "循环",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.iterationNode": "迭代节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.variableProcessing": "变量处理",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.textTransformationNode": "文本转换节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.variable": "变量",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.variableAssignment": "变量赋值",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.variableAssignmentNode": "变量赋值节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.parameterExtraction": "参数提取",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.parameterExtractionNode": "参数提取节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.city": "城市",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.date": "日期",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.apiNode": "API节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.tool": "工具",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.iterationStart": "迭代开始",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.iterationStartNode": "迭代开始节点",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.iterationEnd": "迭代结束",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.system": "系统",
  "spark-flow.demos.spark-flow-1.constant.NodeSchema.systemNode": "系统节点",
  "spark-flow.demos.spark-flow-1.constant.index.textOutput": "文本输出",
  "spark-flow.demos.spark-flow-1.constant.index.listOutput": "列表输出",
  "spark-flow.demos.spark-flow-1.constant.index.name": "名称",
  "spark-flow.demos.spark-flow-1.constant.index.age": "年龄",
  "spark-flow.demos.spark-flow-1.constant.mock.openAiProvider": "OpenAI提供商",
  "spark-flow.demos.spark-flow-1.constant.mock.largeLanguageModel": "大语言模型",
  "spark-flow.demos.spark-flow-1.constant.mock.temperature": "温度",
  "spark-flow.demos.spark-flow-1.constant.mock.controlModelOutputRandomness": "控制模型输出的随机性",
  "spark-flow.demos.spark-flow-1.constant.mock.maxTokens": "最大令牌数",
  "spark-flow.demos.spark-flow-1.constant.mock.maximumLengthOfGeneratedText": "生成文本的最大长度",
  "spark-flow.demos.spark-flow-1.index.start": "开始",
  "spark-flow.demos.spark-flow-1.index.city": "城市",
  "spark-flow.demos.spark-flow-1.index.date": "日期",
  "spark-flow.demos.spark-flow-1.index.end": "结束",
  "spark-flow.demos.spark-flow-1.index.largeModel1": "大模型1",
  "spark-flow.demos.spark-flow-1.index.textOutput": "文本输出",
  "spark-flow.demos.spark-flow-1.index.youAreAAssistant": "你是一个小助理",
  "spark-flow.demos.spark-flow-1.index.addNode": "添加节点",
  "spark-flow.demos.spark-flow-1.index.enterNodeName": "请输入节点名称",
  "spark-flow.demos.spark-flow-1.nodes.Api.panel.apiUrl": "API地址",
  "spark-flow.demos.spark-flow-1.nodes.Api.panel.authorization": "鉴权",
  "spark-flow.demos.spark-flow-1.nodes.Api.panel.none": "(无)",
  "spark-flow.demos.spark-flow-1.nodes.Api.panel.headerSettings": "Header设置",
  "spark-flow.demos.spark-flow-1.nodes.Api.panel.bodySettings": "Body设置",
  "spark-flow.demos.spark-flow-1.nodes.Api.panel.output": "输出",
  "spark-flow.demos.spark-flow-1.nodes.Api.panel.rawData": "原始数据",
  "spark-flow.demos.spark-flow-1.nodes.Api.panel.jsonData": "JSON数据",
  "spark-flow.demos.spark-flow-1.nodes.Classify.node.default": "默认",
  "spark-flow.demos.spark-flow-1.nodes.Classify.node.noIntentionConfigured": "暂未配置意图",
  "spark-flow.demos.spark-flow-1.nodes.Classify.panel.fastMode": "快速模式",
  "spark-flow.demos.spark-flow-1.nodes.Classify.panel.classificationModelAvoidsThinkingProcessToImproveSpeed适用于SimpleScenarios": "分类模型会避免输出思考过程，提升速度，适用于简单场景",
  "spark-flow.demos.spark-flow-1.nodes.Classify.panel.efficiencyMode": "效果模式",
  "spark-flow.demos.spark-flow-1.nodes.Classify.panel.classificationModelThinksStepByStepToMatchCorrespondingClassificationMoreAccurately": "分类模型会一步一步的思考，更精准的匹配对应的分类",
  "spark-flow.demos.spark-flow-1.nodes.Classify.panel.input": "输入",
  "spark-flow.demos.spark-flow-1.nodes.Classify.panel.intentionClassification": "意图分类",
  "spark-flow.demos.spark-flow-1.nodes.Classify.panel.addIntention(": "添加意图（",
  "spark-flow.demos.spark-flow-1.nodes.Classify.panel.otherIntention": "其他意图",
  "spark-flow.demos.spark-flow-1.nodes.Classify.panel.thinkingMode": "思考模式",
  "spark-flow.demos.spark-flow-1.nodes.Classify.panel.prompt": "提示词",
  "spark-flow.demos.spark-flow-1.nodes.Classify.panel.output": "输出",
  "spark-flow.demos.spark-flow-1.nodes.LLM.panel.modelSelection": "模型选择",
  "spark-flow.demos.spark-flow-1.nodes.LLM.panel.prompt": "提示词",
  "spark-flow.demos.spark-flow-1.nodes.LLM.panel.userPrompt": "用户提示词",
  "spark-flow.demos.spark-flow-1.nodes.LLM.panel.output": "输出",
  "spark-flow.demos.spark-flow-1.nodes.Output.panel.outputContent": "输出内容",
  "spark-flow.demos.spark-flow-1.nodes.Output.panel.streamOutput": "流式输出",
  "spark-flow.demos.spark-flow-1.nodes.ParameterExtractor.panel.input": "输入",
  "spark-flow.demos.spark-flow-1.nodes.ParameterExtractor.panel.extractParameters": "提取参数",
  "spark-flow.demos.spark-flow-1.nodes.ParameterExtractor.panel.addVariable": "添加变量",
  "spark-flow.demos.spark-flow-1.nodes.ParameterExtractor.panel.prompt": "提示词",
  "spark-flow.demos.spark-flow-1.nodes.ParameterExtractor.panel.output": "输出",
  "spark-flow.demos.spark-flow-1.nodes.Script.panel.input": "输入",
  "spark-flow.demos.spark-flow-1.nodes.Script.panel.code": "代码",
  "spark-flow.demos.spark-flow-1.nodes.Script.panel.fullScreenEditing": "全屏编辑",
  "spark-flow.demos.spark-flow-1.nodes.Script.panel.outputVariables": "输出变量",
  "spark-flow.demos.spark-flow-1.nodes.Start.panel.input": "输入",
  "spark-flow.demos.spark-flow-1.nodes.Start.panel.customVariables": "自定义变量",
  "spark-flow.demos.spark-flow-1.nodes.Start.panel.variable": "内置变量",
  "spark-flow.demos.spark-flow-1.nodes.Start.panel.userQuery": "用户的query",
  "spark-flow.demos.spark-flow-1.nodes.VariableAssign.panel.setVariable": "设置变量",
  "spark-flow.demos.spark-flow-1.nodes.VariableAssign.panel.variable": "变量",
  "spark-flow.demos.spark-flow-1.nodes.VariableAssign.panel.setValue": "设置值",
  "spark-flow.demos.spark-flow-1.nodes.VariableAssign.panel.addVariable": "添加变量",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.aggregateGroup": "聚合分组",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.textOutput": "文本输出",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.jsonOutput": "JSON输出",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.returnFirstNonEmptyValue": "返回每个分组中第一个非空的值",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.returnLastNonEmptyValue": "返回每个分组中最后一个非空的值",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.enterGroupName": "请输入分组名称",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.groupNameExists": "分组名称已存在",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.onlyLettersDigitsUnderscoreAndDollar": "只能包含字母、数字、下划线和$，且不能以数字开头",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.outputMode": "输出模式",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.groupingStrategy": "分组策略",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.addGroup": "添加分组",
  "spark-flow.demos.spark-flow-1.nodes.VariableHandle.panel.output": "输出",
  "spark-flow.demos.spark-flow-1.nodes.configPanelsMap.unsupportedNode": "未支持的节点",
  "spark-flow.flow.index.systemNodeCannotBeDeleted": "系统节点不允许删除",
  "spark-flow.hooks.useNodesInteraction.sameSubCanvasOnly": "只能同一子画布中的节点相连",
  "spark-flow.hooks.useNodesInteraction.cannotConnectToSelf": "不能与自身相连",
  "spark-flow.hooks.useNodesInteraction.cannotFormLoop": "不能形成环路",
  "spark-flow.hooks.useNodesInteraction.subCanvasCannotNest": "子画布不能互相嵌套",
  "spark-flow.hooks.useNodesInteraction.copySuccess": "复制成功",
  "spark-flow.hooks.useNodesOutputParams.builtinVariable": "内置变量",
  "spark-flow.components.CodeInput.index.jsonEdit": "JSON编辑",
  "spark-flow.demos.spark-flow-1.components.WorkFlowHeader.index.clear": "清除",
  "spark-flow.ScriptEditModal.index.scriptConversionCodeEditor": "脚本转换：代码编辑",
  "spark-flow.JudgeForm.index.newConditionGroup": "新条件组",
  "spark-flow.JudgeForm.index.addCondition": "添加条件",
  "spark-flow.JudgeForm.index.addConditionGroup": "添加条件组",
  "spark-flow.BranchTitleHeader.index.conditionGroupNameEmpty": "条件组名称不能为空",
  "spark-flow.BranchTitleHeader.index.conditionGroupNameExists": "条件组名称已存在",
  "spark-flow.BranchTitleHeader.index.enterConditionGroupName": "请输入条件组名称",
  "spark-flow.BranchTitleHeader.index.whenSatisfy": "当满足以下",
  "spark-flow.BranchTitleHeader.index.all": "所有",
  "spark-flow.BranchTitleHeader.index.any": "任意",
  "spark-flow.BranchTitleHeader.index.conditions": "条件时",
  "main.pages.App.Workflow.constant.equal": "等于",
  "main.pages.App.Workflow.constant.notEqual": "不等于",
  "main.pages.App.Workflow.constant.empty": "为空",
  "main.pages.App.Workflow.constant.notEmpty": "不为空",
  "main.pages.App.Workflow.constant.greaterThan": "大于",
  "main.pages.App.Workflow.constant.greaterThanOrEqual": "大于等于",
  "main.pages.App.Workflow.constant.lessThan": "小于",
  "main.pages.App.Workflow.constant.lessThanOrEqual": "小于等于",
  "main.pages.App.Workflow.constant.lengthEqual": "长度等于",
  "main.pages.App.Workflow.constant.lengthGreaterThan": "长度大于",
  "main.pages.App.Workflow.constant.lengthGreaterThanOrEqual": "长度大于等于",
  "main.pages.App.Workflow.constant.lengthLessThan": "长度小于",
  "main.pages.App.Workflow.constant.lengthLessThanOrEqual": "长度小于等于",
  "main.pages.App.Workflow.constant.contains": "包含",
  "main.pages.App.Workflow.constant.notContains": "不包含",
  "main.pages.App.Workflow.constant.isTrue": "为true",
  "main.pages.App.Workflow.constant.isFalse": "为false"
}
