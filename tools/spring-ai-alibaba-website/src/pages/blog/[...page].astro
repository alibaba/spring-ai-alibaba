---
import type { GetStaticPathsOptions } from "astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import Pagination from "@components/common/Paginate/Pagination.astro";
import { BLOG_CATEGORY } from "@/constant";
import BlogTop from "@components/markdownSet/BlogTop.astro";
import SimpleContainer from '@components/markdownSet/SimpleContainer.astro';
import { useTranslations } from "@i18n/util";
import type { Post } from '@/types';
const t = useTranslations(Astro);

// 分页数据在page参数中传递
const { page } = Astro.props;

const allPages = [...Array(page.lastPage).keys()].map((num) => {
    return `/blog${num === 0 ? "" : `/${String(num + 1)}/`}`;
});

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const blogCategories = new Set(BLOG_CATEGORY.map((item) => item.type));
    const posts = await getCollection("blog", (item) =>
        blogCategories.has(item.data.category),
    );

    const sortedPosts = posts.sort(
        (a, b) =>
            new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf(),
    );
    return paginate(sortedPosts, { pageSize: 9 });
}
---

<BaseLayout title={t("blog.all.articles")} channel={t("commmon.header.comm.blog")}>
    <div class="bg-base-100">
        <BlogTop 
            title={t("blog.all.articles")} 
            type="blog-sub" 
            source="blog"
            type="home"
            category={BLOG_CATEGORY}
            activeCategory="all"
        />
        <div
            class="mx-auto flex flex-col items-center gap-20 py-8 lg:p-12 xl:p-20 bg-error"
        >
            <SimpleContainer 
                pageList={page.data as Post[]}
            />

            <Pagination
                restRoute
                allPages={allPages}
                page={page}
                class="mx-auto"
            />
        </div>
    </div>
</BaseLayout>

